1. Understanding React Components:

React applications are built using components. Components are the building blocks of React apps, where each component manages its own structure and behavior.

In this example, you created an App component and a Card component. The App component is responsible for managing the logic and passing data (via props) to the Card component.

2. Using Props for Data Passing:

Props are used to pass data from a parent component (App) to a child component (Card).

In this app, the App component passes a random number generated by the randNum function to the Card component as a prop. The Card component then uses this prop to display the number and decide whether it is "High" or "Low".

3. Arrow Functions and Implicit Return:

The randNum function in the App component uses an arrow function with an implicit return to generate a random number between 1 and 100.

Arrow functions allow for cleaner and more concise code, especially when you don't need a function body.

4. Conditional Rendering with Ternary Operator:

Inside the Card component, a ternary operator is used to render different text based on the value of the number passed as a prop.

If the number is greater than 50, the card displays "High". If it's 50 or less, it shows "Low". This is an example of conditional rendering in React.

5. Reusable Components:

The Card component is reusable and can render different data depending on the props passed to it. You can pass different numbers to the Card components, and each will display its own value and the corresponding "High" or "Low" label.